Dataset for Wearables in the Wetlab
===================================

Philipp M. Scholl, Matthias Wille, Kristof Van Laerhoven - Wearables in the Wet
Lab: A Laboratory System for Capturing and Guiding Experiments

These are the original videos, acceleration and ground truth tracks contained in
an .mkv multi-media file. You will most likely want to use the ffmpeg command
toolsuite to unpack the original data, or use a subtitle editor of your choice.
You can also use the tools contained in the grtool set for this
(http://www.github.com/pscholl/grtool/).

Note that all videos are muted, and acceleration is packed into the .mkv as an
audio track with 3 channels, representing the x,y, and z axis of the wrist-worn
accelerometer. The acceleration data was recorded with 50Hz and +-4g range, data
has been normalized to +-1.

Here is how to list the contained tracks in each mkv file using _ffprobe_ on a
unix command line:

 $ ffprobe 102.mkv
  ffprobe version 2.7.1 Copyright (c) 2007-2015 the FFmpeg developers
    built with gcc 5.1.0 (GCC)
    configuration: --prefix=/usr --disable-debug --disable-static
  --disable-stripping --enable-avisynth --enable-avresample --enable-fontconfig
  --enable-gnutls --enable-gpl --enable-libass --enable-libbluray
  --enable-libfreetype --enable-libfribidi --enable-libgsm --enable-libmodplug
  --enable-libmp3lame --enable-libopencore_amrnb --enable-libopencore_amrwb
  --enable-libopenjpeg --enable-libopus --enable-libpulse --enable-libschroedinger
  --enable-libspeex --enable-libssh --enable-libtheora --enable-libv4l2
  --enable-libvorbis --enable-libvpx --enable-libwebp --enable-libx264
  --enable-libx265 --enable-libxvid --enable-shared --enable-version3
  --enable-x11grab
    libavutil      54. 27.100 / 54. 27.100
    libavcodec     56. 41.100 / 56. 41.100
    libavformat    56. 36.100 / 56. 36.100
    libavdevice    56.  4.100 / 56.  4.100
    libavfilter     5. 16.101 /  5. 16.101
    libavresample   2.  1.  0 /  2.  1.  0
    libswscale      3.  1.101 /  3.  1.101
    libswresample   1.  2.100 /  1.  2.100
    libpostproc    53.  3.100 / 53.  3.100
  Input #0, matroska,webm, from '102.mkv':
    Metadata:
      ENCODER         : Lavf56.36.100
    Duration: 00:53:00.00, start: 0.000000, bitrate: 2119 kb/s
      Stream #0:0: Audio: wavpack, 50 Hz, 3.0, s16p
      Metadata:
        NAME            : acceleration
        ENCODER         : Lavc56.41.100 wavpack
      Stream #0:1: Subtitle: ass
      Metadata:
        ENCODER         : Lavc56.41.100 ass
      Stream #0:2(und): Video: h264 (Constrained Baseline), yuv420p, 1920x1080,
  SAR 1:1 DAR 16:9, 21.60 fps, 21.60 tbr, 1k tbn, 100 tbc (default)
      Metadata:
        CREATION_TIME   : 2014-03-03 14:13:12
        LANGUAGE        : und
        ENCODER         : JVT/AVC Coding
      Stream #0:3(und): Audio: pcm_s16le, 48000 Hz, 2 channels, s16, 1536 kb/s
  (default)
      Metadata:
        CREATION_TIME   : 2014-03-03 14:13:12
        LANGUAGE        : und

 You can see from this output that there are three tracks, an acceleration audio
track, video track and subtitle track.

 To just unpack the subtitle track use this command:

 $  ffmpeg -i 102.mkv -f ssa -
   [Script Info]
   ; Script generated by Aegisub 3.2.0
   ; http://www.aegisub.org/
   Title: Default Aegisub file
   ScriptType: v4.00+
   WrapStyle: 0
   ScaledBorderAndShadow: yes
   YCbCr Matrix: TV.601
   PlayResX: 1920
   PlayResY: 1080
   
   [Aegisub Project Garbage]
   Audio File: video.mp4
   Video File: video.mp4
   Video AR Mode: 4
   Video AR Value: 1.777778
   Video Zoom Percent: 0.375000
   Active Line: 19
   Video Position: 44719
   
   [V4+ Styles]
   Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour,
   BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle,
   BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding
   Style:
   Default,Arial,20,&H00FFFFFF,&H000000FF,&H00000000,&H00000000,0,0,0,0,100,100,0,0,1,2,2,2,10,10,10,1
   Style:
   action,Arial,20,&H0000FF00,&H000000FF,&H00000000,&H00000000,0,0,0,0,100,100,0,0,1,2,2,2,10,10,10,1
   
   [Events]
   Format: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text
   Dialogue: 0,0:00:25.51,0:00:31.31,action,,0,0,0,,pouring
   Dialogue: 0,0:00:39.39,0:00:44.01,action,,0,0,0,,transfer
   Dialogue: 0,0:00:56.99,0:01:12.15,action,,0,0,0,,pipetting
   Dialogue: 0,0:01:28.81,0:01:52.41,action,,0,0,0,,stirring
   Dialogue: 0,0:01:41.60,0:02:43.49,Default,,0,0,0,,2catalysator
   Dialogue: 0,0:02:43.49,0:04:21.32,Default,,0,0,0,,3cutting
   Dialogue: 0,0:02:53.15,0:02:56.15,action,,0,0,0,,pour catalysator
   Dialogue: 0,0:04:01.59,0:04:18.79,action,,0,0,0,,cutting
   Dialogue: 0,0:04:21.32,0:05:21.42,Default,,0,0,0,,4mixing
   Dialogue: 0,0:04:38.15,0:04:56.29,action,,0,0,0,,pipetting
   Dialogue: 0,0:04:57.09,0:05:28.41,action,,0,0,0,,stirring
   Dialogue: 0,0:05:21.42,0:05:45.13,Default,,0,0,0,,5catalysator
   Dialogue: 0,0:05:37.17,0:05:39.15,action,,0,0,0,,pour catalysator
   Dialogue: 0,0:05:45.13,0:06:04.44,Default,,0,0,0,,6waterbath
   Dialogue: 0,0:06:04.44,0:08:24.80,Default,,0,0,0,,7solvent
   Dialogue: 0,0:06:57.69,0:07:04.77,action,,0,0,0,,transfer
   Dialogue: 0,0:07:08.75,0:07:49.57,action,,0,0,0,,pipetting
   Dialogue: 0,0:07:57.92,0:08:14.83,action,,0,0,0,,stirring
   Dialogue: 0,0:08:24.80,0:08:40.73,Default,,0,0,0,,8catalysator
   Dialogue: 0,0:08:29.22,0:08:33.86,action,,0,0,0,,pour catalysator
   Dialogue: 0,0:08:40.73,0:09:29.71,Default,,0,0,0,,9cutting
   Dialogue: 0,0:09:29.71,0:10:43.31,Default,,0,0,0,,10mixing
   Dialogue: 0,0:09:44.68,0:09:53.72,action,,0,0,0,,stirring
   Dialogue: 0,0:09:56.54,0:10:07.32,action,,0,0,0,,pipetting
   Dialogue: 0,0:10:08.86,0:10:30.10,action,,0,0,0,,stirring
   Dialogue: 0,0:10:43.31,0:11:04.57,Default,,0,0,0,,11catalysator
   Dialogue: 0,0:10:45.50,0:10:49.26,action,,0,0,0,,pour catalysator
   Dialogue: 0,0:11:04.57,0:11:09.30,Default,,0,0,0,,12waterbath
   Dialogue: 0,0:11:09.30,0:11:26.20,Default,,0,0,0,,13waterbath
   Dialogue: 0,0:11:26.20,0:11:40.81,Default,,0,0,0,,14catalysator
   Dialogue: 0,0:11:29.92,0:11:32.78,action,,0,0,0,,pour catalysator
   Dialogue: 0,0:11:40.81,0:12:23.29,Default,,0,0,0,,15pestling
   Dialogue: 0,0:11:43.54,0:12:19.22,action,,0,0,0,,pestling
   Dialogue: 0,0:12:23.29,0:13:47.18,Default,,0,0,0,,16filtrate
   Dialogue: 0,0:13:03.78,0:13:13.12,action,,0,0,0,,pouring
   Dialogue: 0,0:13:47.18,0:14:32.91,Default,,0,0,0,,17catalysator
   Dialogue: 0,0:14:32.91,0:16:54.30,Default,,0,0,0,,18pouring
   Dialogue: 0,0:14:53.42,0:15:11.99,action,,0,0,0,,pipetting
   Dialogue: 0,0:15:55.38,0:16:12.58,action,,0,0,0,,pipetting
   Dialogue: 0,0:16:16.66,0:16:23.26,action,,0,0,0,,pouring
   Dialogue: 0,0:16:31.54,0:16:39.33,action,,0,0,0,,pipetting
   Dialogue: 0,0:16:54.30,0:17:29.00,Default,,0,0,0,,19detect
   Dialogue: 0,0:17:02.48,0:17:24.92,action,,0,0,0,,inverting
   Dialogue: 0,0:17:29.00,0:17:46.13,Default,,0,0,0,,20waterbath
   Dialogue: 0,0:17:46.13,0:17:57.71,Default,,0,0,0,,21catalysator
   Dialogue: 0,0:17:48.29,0:17:51.36,action,,0,0,0,,pour catalysator
   Dialogue: 0,0:17:57.71,0:19:00.97,Default,,0,0,0,,22pestling
   Dialogue: 0,0:17:59.99,0:18:53.97,action,,0,0,0,,pestling
   Dialogue: 0,0:19:00.97,0:20:55.02,Default,,0,0,0,,23filtrate
   Dialogue: 0,0:19:35.43,0:19:46.37,action,,0,0,0,,pouring
   Dialogue: 0,0:20:55.02,0:21:10.40,Default,,0,0,0,,24catalysator
   Dialogue: 0,0:21:00.89,0:21:03.81,action,,0,0,0,,pour catalysator
   Dialogue: 0,0:21:10.40,0:22:17.75,Default,,0,0,0,,25pouring
   Dialogue: 0,0:21:15.77,0:21:34.13,action,,0,0,0,,pipetting
   Dialogue: 0,0:21:42.77,0:21:59.57,action,,0,0,0,,pouring
   Dialogue: 0,0:22:17.75,0:23:02.05,Default,,0,0,0,,26detect
   Dialogue: 0,0:22:21.61,0:22:56.49,action,,0,0,0,,inverting
   Dialogue: 0,0:23:02.05,0:26:19.28,Default,,0,0,0,,27end
   Dialogue: 0,0:26:19.28,0:26:41.48,Default,,0,0,0,,26detect

If you look closely you can see that there are two styles defined in the
subtitle format. The *Default* style refers to ground truth gathered from the
currently displayed step on Google Glass. The *action* style refers to executed
actions like inverting.

The acceleration data can be unpacked in binary format with ffmpeg as well:

 $ ffmpeg -i 102.mkv -f f32le -
 ...

This will print the acceleration on standard out, encoded as triplets (x,y,z) of
floats. So a 4 byte float for each axis. With pyton this can be converted to a
text format:

 $ ffmpeg -i 102.mkv -f f32le - | python -c 'import sys,struct;[print(struct.unpack("3f",sys.stdin.buffer.read(3*4))) for i in sys.stdin.buffer.peek(3*4)]'
  (0.140625, -0.2421875, 0.203125)
  (0.140625, -0.2421875, 0.203125)
  ...
  (0.0078125, 0.234375, 0.0625)
  (0.0078125, 0.234375, 0.0625)

